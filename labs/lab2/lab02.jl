using DifferentialEquations, Plots, Printf

# Параметры задачи
k = 5.9            # расстояние от лодки до катера при обнаружении (км)
n = 1.9            # отношение скоростей: скорость катера = n * скорость лодки
α = sqrt(n^2 - 1)  # α = sqrt(2.61) ≈ 1.616
fi = 3*pi/4        # направление движения лодки (радианы)
v = 1.0            # скорость лодки (единица, для построения графика)

# Определяем ОДУ для фазового уравнения движения катера:
# Решаем уравнение: dr/dθ = r / α
# Здесь u = r, независимая переменная обозначена как θ.
f(u, p, t) = u / α  # функция с тремя аргументами

########################################################################
# СЛУЧАЙ 1
########################################################################

# Начальные условия: катер начинает поворот с r = k/2.9 при θ = 0
r0_case1 = k / 2.9
θspan1 = (0.0, fi)

prob1 = ODEProblem(f, r0_case1, θspan1)
sol1 = solve(prob1, saveat=0.01)

# В точке θ = fi получаем радиус пересечения
r_int1 = sol1.u[end]

# Траектория лодки: движется вдоль постоянного угла fi, радиус равен r = t (при v=1)
t_vals = 0:0.01:r_int1
θ_boat = fill(fi, length(t_vals))
r_boat = t_vals

# Формируем строку с рассчитанными значениями точки пересечения
intersection_label1 = @sprintf("Точка пересечения (r,θ) = (%.2f, %.2f)", r_int1, fi)

# Построение графика (случай 1)
plt1 = plot(sol1.t, sol1.u, proj=:polar, lw=2,
    label="Траектория катера (случай 1)")
plot!(θ_boat, r_boat, proj=:polar, lw=2,
    label="Траектория лодки")
scatter!([fi], [r_int1], marker=(:circle, 10),
    label=intersection_label1)
savefig(plt1, "lab2_01.png")


########################################################################
# СЛУЧАЙ 2
########################################################################

# Начальные условия: катер начинает поворот с r = k/0.9 при θ = -π
r0_case2 = k / 0.9
θspan2 = (-pi, fi)

prob2 = ODEProblem(f, r0_case2, θspan2)
sol2 = solve(prob2, saveat=0.01)

r_int2 = sol2.u[end]

# Траектория лодки: движение вдоль угла fi, r = t (при v=1)
t_vals2 = 0:0.01:r_int2
θ_boat2 = fill(fi, length(t_vals2))
r_boat2 = t_vals2

# Формируем строку с рассчитанными значениями точки пересечения
intersection_label2 = @sprintf("Точка пересечения (r,θ) = (%.2f, %.2f)", r_int2, fi)

# Построение графика (случай 2)
plt2 = plot(sol2.t, sol2.u, proj=:polar, lw=2,
    label="Траектория катера (случай 2)")
plot!(θ_boat2, r_boat2, proj=:polar, lw=2,
    label="Траектория лодки")
scatter!([fi], [r_int2], marker=(:circle, 10),
    label=intersection_label2)
savefig(plt2, "lab2_02.png")
